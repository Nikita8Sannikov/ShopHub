# Главная секция
worker_processes 1;

# Указание на блок событий, который обязателен для работы Nginx
events {
    worker_connections 1024;                        # Указываем количество одновременных соединений, которое может обработать один рабочий процесс
}

# Начало конфигурации сервера nginx
http {
    include       mime.types;                       # Сообщаем nginx включить файл mime.types
    default_type  application/octet-stream;         # Директива типа контента по умолчанию (если nginx не находит тип файла в mime.types)

    # Блок server на порту 80 (для http) для обработки запросов
    server {
            listen 80;                                  # Указываем внутренний порт сервиса nginx в докере
            server_name localhost;                      # Указание имени хоста (страница будет доступна в браузере по этому хосту)

        # Обслуживание статики (React-приложение)
        location / {
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri /index.html;  # Это важно для React, чтобы маршруты работали без перезагрузки
        
        # Включаем кэширование статики
        location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|otf|svg)$ {
            expires 6M;                         # Устанавливаем срок хранения кеша в 6 месяцев
            access_log off;                     # Отключаем запись логов к этим закешированным файлам
            add_header Cache-Control "public";  # Добавляем заголовок Cache-Control со значением public, что разрешает кеширование файлов всеми пользователями
        }
        }

        # Проксирование API-запросов на сервер (Express)
        location /api/ {
            proxy_pass  http://server:5001/;  # Имя контейнера сервера (Express)
        
            proxy_set_header Host $host;                                          # Установка заголовка Host в запросе
            proxy_set_header X-Real-IP $remote_addr;                              # Установка заголовка X-Real-IP (реальный IP-адрес) в запросе
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;          # Установка заголовка X-Forwarded-For (передача используемых прокси-серверов) в запросе
            proxy_set_header X-Forwarded-Proto $scheme;                           # Установка заголовка X-Forwarded-Proto (какой протокол используется - http или https) в запросе
        
        # Заголовки для CORS
            add_header Access-Control-Allow-Origin "http://localhost:5173";       # Адрес клиента
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, application/json";
        # Для кук
            add_header Set-Cookie "Secure; HttpOnly; SameSite=None";              # Обработка Set-Cookie
        
        # Обработка pre-flight запросов (OPTIONS)
            if ($request_method = "OPTIONS") {
                add_header Access-Control-Allow-Origin "http://localhost:5173";
                add_header Access-Control-Allow-Credentials true;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization";
                return 204;
            }
        }

        location /uploads/ {
              proxy_pass  http://server:5001/;  # Имя контейнера сервера (Express)
        
            proxy_set_header Host $host;                                          # Установка заголовка Host в запросе
            proxy_set_header X-Real-IP $remote_addr;                              # Установка заголовка X-Real-IP (реальный IP-адрес) в запросе
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;          # Установка заголовка X-Forwarded-For (передача используемых прокси-серверов) в запросе
            proxy_set_header X-Forwarded-Proto $scheme;                           # Установка заголовка X-Forwarded-Proto (какой протокол используется - http или https) в запросе
        
        # Заголовки для CORS
            add_header Access-Control-Allow-Origin "http://localhost:5173";       # Адрес клиента
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, application/json";
        # Для кук
            add_header Set-Cookie "Secure; HttpOnly; SameSite=None";              # Обработка Set-Cookie
        
        # Обработка pre-flight запросов (OPTIONS)
            if ($request_method = "OPTIONS") {
                add_header Access-Control-Allow-Origin "http://localhost:5173";
                add_header Access-Control-Allow-Credentials true;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization";
                return 204;
            }
        }

        # Включаем Gzip для уменьшения размера файлов
            gzip on;
            gzip_min_length 1024;
            gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
            gzip_vary on;
        # Логи
            access_log /var/log/nginx/access.log;
            error_log /var/log/nginx/error.log;
    }
}
